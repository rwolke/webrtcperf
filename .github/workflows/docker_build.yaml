name: Build Docker image

on:
  workflow_dispatch:
  push:
    tags:
    - 'v*'
    branches:
    - 'devel'
    paths:
    - 'scripts/*'
    - 'src/*'
    - '*.json'
    - '*.js'
    - 'yarn.lock'
    - 'Dockerfile*'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  DEBUG_LEVEL: "INFO"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'yarn'
    - name: Cache modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('./package.json') }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-node-modules-${{ hashFiles('./package.json') }}-
    - name: Yarn build
      run: yarn

    - name: Get package version
      id: get_package_version
      run: |
        version=$(sed -nE 's/^\s*"version": "(.*?)",$/\1/p' package.json)
        echo ::set-output name=version::${version}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.NPM_TOKEN }}

    - name: Docker build and push develop version
      if: ${{ !startsWith(github.event.ref, 'refs/tags/v') }}
      uses: docker/build-push-action@v3
      with:
        platforms: linux/amd64,linux/arm64
        context: .
        push: true
        tags: ghcr.io/${{ github.repository }}:devel
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: Docker build and push new version
      if: startsWith(github.event.ref, 'refs/tags/v')
      uses: docker/build-push-action@v3
      with:
        platforms: linux/amd64,linux/arm64
        context: .
        push: true
        tags: ghcr.io/${{ github.repository }}:${{ steps.get_package_version.outputs.version }},ghcr.io/${{ github.repository }}:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
